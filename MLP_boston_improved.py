# -*- coding: utf-8 -*-
"""Untitled29.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10_IqCnfvmcQZ23DFTPxmAvl3SPYyngZk
"""

import numpy as np
from keras.datasets import boston_housing

from keras.models import Sequential
from keras.layers import Dense

from keras.metrics import RootMeanSquaredError

from sklearn.preprocessing import scale

(X_train, y_train), (X_test, y_test) = boston_housing.load_data()
X_train[0]

X_train_scaled = scale(X_train)
X_train_scaled[0]

X_test_scaled = scale(X_test)
X_test_scaled[0]

model = Sequential()

# First Hidden Layer
model.add(Dense(64, activation='relu', input_shape=(13,)))
# Second Hidden Layer
model.add(Dense(32, activation='relu'))
# Output Layer
model.add(Dense(1, activation='relu'))

rmse = RootMeanSquaredError(name = 'rmse')

model.compile(loss='mse', optimizer='sgd', metrics=[rmse])

results = model.fit(
  x=X_train_scaled,
  y=y_train,
  epochs=500,
  batch_size=128,
  verbose=1,
  validation_split= 0.2
)

score = model.evaluate(x=X_test_scaled, y=y_test, verbose = 0)
print('Test mse: ', score[0])
print('Test rmse: ', score[1])

import matplotlib.pyplot as plt

plt.plot(results.history['loss'])
plt.plot(results.history['val_loss'])
plt.legend(['Training', 'Validation'])
plt.title('Training and Validation Losses')
plt.xlabel('epoch')
plt.ylabel('Losses')

plt.plot(results.history['rmse'])
plt.plot(results.history['val_rmse'])
plt.legend(['Training', 'Validation'])
plt.title('Training and Validation MSE')
plt.xlabel('epoch')
plt.ylabel('RMSE')

prediction = model.predict(X_test_scaled)
print(prediction.flatten())
print(y_test)